# Script de teste para Windows
# Execute: .\test-windows.ps1

Write-Host "üß™ Testando Guia √önico - Sistema de Simula√ß√£o" -ForegroundColor Green

# Verificar se o servidor est√° rodando
Write-Host "üîç Verificando se o servidor est√° ativo..." -ForegroundColor Yellow

try {
    $response = Invoke-RestMethod -Uri "http://localhost:5000/api/health" -Method Get -TimeoutSec 5
    Write-Host "‚úÖ Servidor ativo!" -ForegroundColor Green
    Write-Host "Status: $($response.status)" -ForegroundColor Cyan
    Write-Host "Ambiente: $($response.environment)" -ForegroundColor Cyan
    Write-Host "Uptime: $([math]::Round($response.uptime/60, 2)) minutos" -ForegroundColor Cyan
} catch {
    Write-Host "‚ùå Servidor n√£o est√° respondendo em http://localhost:5000" -ForegroundColor Red
    Write-Host "Execute primeiro: .\dev-windows.ps1" -ForegroundColor Yellow
    exit 1
}

# Testar conex√£o com banco
Write-Host "üóÑÔ∏è Testando conex√£o com banco..." -ForegroundColor Yellow
try {
    $dbTest = Invoke-RestMethod -Uri "http://localhost:5000/api/health-plans" -Method Get -TimeoutSec 5
    Write-Host "‚úÖ Banco de dados conectado!" -ForegroundColor Green
    Write-Host "Planos encontrados: $($dbTest.Count)" -ForegroundColor Cyan
} catch {
    Write-Host "‚ö†Ô∏è Poss√≠vel problema com banco de dados" -ForegroundColor Yellow
    Write-Host "Verifique a configura√ß√£o DATABASE_URL no arquivo .env" -ForegroundColor Yellow
}

# Testar autentica√ß√£o
Write-Host "üîê Testando sistema de autentica√ß√£o..." -ForegroundColor Yellow
try {
    $loginData = @{
        username = "admin"
        password = "admin123"
    } | ConvertTo-Json

    $session = Invoke-WebRequest -Uri "http://localhost:5000/api/auth/login" -Method Post -Body $loginData -ContentType "application/json" -SessionVariable webSession
    
    if ($session.StatusCode -eq 200) {
        Write-Host "‚úÖ Login funcionando!" -ForegroundColor Green
        
        # Testar acesso autenticado
        $userInfo = Invoke-RestMethod -Uri "http://localhost:5000/api/auth/me" -Method Get -WebSession $webSession
        Write-Host "Usu√°rio logado: $($userInfo.user.username)" -ForegroundColor Cyan
    }
} catch {
    Write-Host "‚ö†Ô∏è Problema com autentica√ß√£o" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "üéØ Resumo dos Testes:" -ForegroundColor Green
Write-Host "üì± Frontend: http://localhost:5000" -ForegroundColor White
Write-Host "üîß API Health: http://localhost:5000/api/health" -ForegroundColor White
Write-Host "üë§ Login: admin / admin123" -ForegroundColor White
Write-Host ""
Write-Host "üìã Funcionalidades Principais:" -ForegroundColor Cyan
Write-Host "‚Ä¢ Simulador de planos de sa√∫de" -ForegroundColor White
Write-Host "‚Ä¢ Painel administrativo" -ForegroundColor White
Write-Host "‚Ä¢ Sistema de recomenda√ß√µes" -ForegroundColor White
Write-Host "‚Ä¢ Exporta√ß√£o para Excel" -ForegroundColor White
Write-Host "‚Ä¢ Integra√ß√£o WhatsApp" -ForegroundColor White